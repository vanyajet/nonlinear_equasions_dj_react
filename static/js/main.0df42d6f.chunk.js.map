{"version":3,"sources":["Loader.js","Components/Title.js","Components/InputField.js","Components/InputFieldList.js","Components/Solvers.js","Components/Default.js","Components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["style","display","justifyContent","margin","className","Title","name","title","InputField","number","deleteInputField","type","as","TextField","fullWidth","variant","label","Fab","color","aria-label","onClick","InputFieldList","inputs","Fragment","map","item","id","Solvers","useState","setInputs","filter","Container","initialValues","variables","initial_guess","onSubmit","values","a","axios","post","then","res","console","log","data","placeholder","length","JSON","stringify","Default","Results","results","setResults","useEffect","method","url","response","theme","createMuiTheme","palette","primary","light","dark","main","contrastText","secondary","useStyles","makeStyles","root","backgroundColor","fontWeight","indicator","App","classes","React","value","setValue","Paper","Tabs","onChange","event","newValue","indicatorColor","centered","Tab","to","exact","path","Suspense","fallback","Loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0df42d6f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default () => <div style={{display: 'flex', justifyContent: 'center', margin:'5rem'}}>\r\n    <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    </div>","import React from 'react'\r\n\r\nfunction Title({name, title}) {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-10 mx-auto my-3 text-left text-title\">\r\n                <h3 className='text-center'>\r\n                    {name} <strong className='bold-red'>{title} </strong>\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title","import React from 'react'\r\nimport { TextField, Fab } from '@material-ui/core'\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { Field } from 'formik';\r\n\r\nfunction InputField ({number, deleteInputField}) {\r\n\r\n    return (\r\n        <div className='row my-4'>\r\n            <div className='col-8 col-md-10 d-flex justify-content-center'>\r\n                <Field\r\n                    name={`equasion${number}`}  \r\n                    type='input'\r\n                    as={TextField}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    label={`Уравнение ${number}`}\r\n                />\r\n            </div>\r\n            <div className='col-4 col-md-2 d-flex justify-content-end'>\r\n                <Fab\r\n                    color=\"secondary\" \r\n                    aria-label=\"remove\"\r\n                    onClick={() => deleteInputField(number-1)}\r\n                >\r\n                    <RemoveIcon />\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputField","import React from 'react'\r\nimport InputField from './InputField'\r\n\r\nfunction InputFieldList ({inputs, deleteInputField}) {\r\n    return (\r\n        <React.Fragment>\r\n            {inputs.map(item => <InputField key={item.id} number={item.number} deleteInputField={deleteInputField} /> )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InputFieldList","import React, { useState, useEffect } from 'react'\r\nimport Title from './Title'\r\nimport axios from 'axios'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport { Container, TextField, Fab } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport NavigationIcon from '@material-ui/icons/Navigation'\r\nimport InputFieldList from './InputFieldList'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Solvers () {\r\n\r\n    const [inputs, setInputs] = useState ([\r\n        {id: 1, number: 2},\r\n    ])\r\n\r\n    function addInputField() {\r\n        setInputs([\r\n            ...inputs,\r\n            {\r\n                id: inputs.length + 1,\r\n                number: inputs.length + 2\r\n            },\r\n        ])\r\n\r\n    }\r\n\r\n    // const [results, setResults] = useState([])\r\n\r\n    // useEffect(() => {\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://127.0.0.1:8000/api/test-api/'\r\n    //     }).then(response => {\r\n    //         setResults(response.data)\r\n    //     })\r\n    // }, [])\r\n\r\n\r\n    // function resetNumbers() {\r\n    //     setInputs(inputs.map(item => {\r\n    //         item.id = inputs.indexOf(item) + 1\r\n    //         item.number = inputs.indexOf(item) + 2\r\n    //     }))\r\n    // }\r\n\r\n\r\n    function deleteInputField (id) {\r\n        setInputs(inputs.filter(item => item.id !== id))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title name='Решение нелинейных уравений' title='методом Ньютона' />\r\n            <p className='boring-text'>\r\n                Метод последовательных приближений (Ньютона) \r\n                используется для решения систем нелинейных уравнением с <b className='bold-red'>n</b> количеством \r\n                неизвестных и <b className='bold-red'>n</b> количеством уравнений.  \r\n                Для решения уравнения необходимо ввести <b className='bold-red'>n</b> неизвестных    \r\n                и <b className='bold-red'>n</b> уравнений, а затем задать начальное приближение.\r\n            </p>\r\n            <p className='boring-text'>\r\n                <b className='bold-red'>Дробные числа вводятся через точку</b><br/>\r\n                <b className='bold-red'>Перед вводом уравнения должны быть приравнены к нулю</b>\r\n            </p>\r\n            <Formik \r\n                initialValues={{ variables:'', initial_guess:'' }}\r\n                onSubmit={ \r\n                    async function handleSubmit (values) {\r\n                    await axios.post('http://127.0.0.1:8000/api/test-api/', {\r\n                        values,\r\n                    }).then(res => console.log(res.data))\r\n                }}\r\n                // axios({\r\n                //     method: 'GET',\r\n                //     url: 'http://127.0.0.1:8000/api/test-api/'\r\n                // }).then(response => {\r\n                //     setResults(response.data)\r\n                // })\r\n            >\r\n                {({ values }) => (\r\n                    <Form className='input-equasion d-flex justify-content-center flex-column'>\r\n                        <h3>1. Задайте искомые переменные:</h3>\r\n                        <h1 className='d-flex justify-content-center '>\r\n                            F(\r\n                            <Field \r\n                                placeholder='Например: Q1,Q2,Q_max,T1,T_min'\r\n                                name='variables'  \r\n                                type='input'\r\n                                fullWidth\r\n                                as={TextField}\r\n                                variant=\"outlined\"\r\n                        />)\r\n                        </h1>\r\n                        <h3 className='my-2'>2. Введите приравненные к нулю уравнения системы:</h3>\r\n                        <div className='row my-4'>\r\n                            <div className='col-8 col-md-10 d-flex justify-content-start'>\r\n                                <Field name='equasion1'  \r\n                                    type='input'\r\n                                    as={TextField}\r\n                                    fullWidth\r\n                                    label=\"Уравнение 1\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                \r\n                            </div>\r\n                            <div className='col-4 col-md-2 d-flex justify-content-end'>\r\n                                <Fab\r\n                                    color=\"primary\" \r\n                                    aria-label=\"add\"\r\n                                    onClick={() => addInputField()}\r\n                                >\r\n                                    <AddIcon />\r\n                                </Fab>\r\n                            </div>\r\n                        </div>\r\n                        <InputFieldList \r\n                            inputs={inputs}\r\n                            deleteInputField={deleteInputField}\r\n                        />\r\n                        <h3>3. Задайте первое приближение (предположительные значения переменных):</h3>\r\n                        <h1 className='d-flex justify-content-center'>\r\n                            F(\r\n                            <Field \r\n                                placeholder='Например: 2000,30.231,3325.11,293,70'\r\n                                name='initial_guess'  \r\n                                type='input'\r\n                                fullWidth\r\n                                as={TextField}\r\n                                variant=\"outlined\"\r\n                        />)\r\n                        </h1>\r\n                        <h3>4. Задайте итерируемую переменную:</h3>\r\n                        <h1 className='d-flex justify-content-center'>\r\n                            <Field \r\n                                placeholder='Например: T1'\r\n                                name='iterate_what'  \r\n                                type='input'\r\n                                as={TextField}\r\n                                variant=\"outlined\"\r\n                        />\r\n                        </h1>\r\n                        <h3>5. Задайте количество итераций (Например: от 1 до 20 с шагом 1):</h3>\r\n                        <h1 className='d-flex justify-content-start'>\r\n                            <Field \r\n                                placeholder='От:'\r\n                                name='iterate_from'  \r\n                                type='input'\r\n                                as={TextField}\r\n                                variant=\"outlined\"\r\n                                className='col-lg-3 col-md-3 col-sm-5 mx-2'\r\n                            />\r\n                            <Field \r\n                                placeholder='До: '\r\n                                name='iterate_to'  \r\n                                type='input'\r\n                                as={TextField}\r\n                                variant=\"outlined\"\r\n                                className='col-lg-3 col-md-3 col-sm-5 mx-2'\r\n                            />\r\n                            <Field \r\n                                placeholder='С шагом: '\r\n                                name='iterate_step'  \r\n                                type='input'\r\n                                as={TextField}\r\n                                variant=\"outlined\"\r\n                                className='col-lg-3 col-md-3 col-sm-5 mx-2'\r\n                            />\r\n                        </h1>\r\n                        {/* <Link to='/results'> */}\r\n                            <Fab \r\n                                variant=\"extended\" color='primary' type=\"submit\" className='my-3 w-100'\r\n                            >\r\n                                Решить\r\n                                <NavigationIcon />\r\n                            </Fab>\r\n                        {/* </Link> */}\r\n                        <pre>{JSON.stringify(values, null, 2)}</pre>\r\n                    </Form>\r\n                    \r\n                    \r\n                )}\r\n            </Formik>\r\n\r\n            {/* // <Title name='Результаты' />\r\n\r\n            // <pre className='mt-3'>\r\n            //     {JSON.stringify(results, null, 2)}\r\n            // </pre> */}\r\n\r\n        </Container>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Solvers","import React from 'react'\r\nimport Title from './Title'\r\n\r\nfunction Default() {\r\n    return (\r\n        <Title name='404. ' title='Страница не найдена' />\r\n    )\r\n}\r\n\r\nexport default Default","import React, { useState, useEffect } from 'react'\r\nimport Title from './Title'\r\nimport axios from 'axios'\r\n\r\nfunction Results() {\r\n\r\n    const [results, setResults] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://127.0.0.1:8000/api/test-api/'\r\n        }).then(response => {\r\n            setResults(response.data)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container'>\r\n\r\n            <Title name='Результаты' />\r\n\r\n            {/* <ul className='list-unstyled mt-3'>\r\n                {results.map(r => (\r\n                    <li key={r.id}>{r.iterations.map(el => )}</li>\r\n                ))}\r\n            </ul> */}\r\n            <pre className='mt-3'>\r\n                {JSON.stringify(results, null, 2)}\r\n            </pre>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Results","import React from 'react'\nimport {Switch, Route, Link} from 'react-router-dom'\nimport Loader from './Loader'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport './App.css'\nimport Solvers from './Components/Solvers'\nimport Default from './Components/Default'\nimport { Paper, Tabs, Tab } from '@material-ui/core';\nimport { MuiThemeProvider ,createMuiTheme } from '@material-ui/core/styles';\nimport Results from './Components/Results';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#3f51b5',\n      dark:'#1a237e',\n      main: '#303f9f',\n      contrastText: '#f1f1f1'\n    },\n    secondary: {\n      main: '#bf360c',\n    },\n    \n  },\n})\n\nconst useStyles = makeStyles({\n  root: {\n    \n    backgroundColor: '#303f9f',\n    fontWeight: '600',\n    color: '#f1f1f1',\n    \n  },\n  indicator: {\n    backgroundColor: '#f1f1f1'\n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n      setValue(newValue);\n  };\n\n  return (\n    <React.Fragment>\n      <MuiThemeProvider theme={theme}>\n        <Paper className={classes.root}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor='secondary'\n            classes='root'\n            centered\n          >\n            <Tab label=\"Решатели\" className={classes.root}>\n              <Link to='/'></Link>\n            </Tab>\n            <Tab label=\"Циклы\" className={classes.root}>\n              <Link to='/'></Link>\n            </Tab>\n            <Tab label=\"Еще что-то\" className={classes.root} >\n              <Link to='/'></Link>\n            </Tab>\n          </Tabs>\n        </Paper>\n\n        <Switch>\n          <Route exact path='/'> <React.Suspense fallback={<Loader/>}> <Solvers /> </React.Suspense> </Route>\n          <Route path='/results'> <React.Suspense fallback={<Loader/>}> <Results /> </React.Suspense> </Route>\n          <Route> <React.Suspense fallback={<Loader/>}> <Default /> </React.Suspense> </Route>\n        </Switch>\n      </MuiThemeProvider>\n    </React.Fragment>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}